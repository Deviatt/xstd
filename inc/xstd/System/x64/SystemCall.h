#pragma once

#include <xstd/stdafx.h>

static XFINL intptr_t __syscall0(uint32_t n) {
	register intptr_t ret asm("rax");
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall1(uint32_t n, intptr_t x) {
	register intptr_t ret asm("rax");
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall2(uint32_t n, intptr_t x, intptr_t y) {
	register intptr_t ret asm("rax");
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x), "S" (y) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall3(uint32_t n, intptr_t x, intptr_t y, intptr_t z) {
	register intptr_t ret asm("rax");
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x), "S" (y), "d" (z) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall4(uint32_t n, intptr_t x, intptr_t y, intptr_t z, intptr_t w) {
	register intptr_t ret asm("rax");
	register intptr_t r10 asm("r10") = w;
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x), "S" (y), "d" (z), "r" (r10) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall5(uint32_t n, intptr_t x, intptr_t y, intptr_t z, intptr_t w, intptr_t u) {
	register intptr_t ret asm("rax");
	register intptr_t r10 asm("r10") = w;
	register intptr_t r8 asm("r8") = u;
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x), "S" (y), "d" (z), "r" (r10), "r" (r8) : "rcx", "r11", "memory");
	return ret;
}

static XFINL intptr_t __syscall6(uint32_t n, intptr_t x, intptr_t y, intptr_t z, intptr_t w, intptr_t u, intptr_t v) {
	register intptr_t ret asm("rax");
	register intptr_t r10 asm("r10") = w;
	register intptr_t r8 asm("r8") = u;
	register intptr_t r9 asm("r9") = v;
	__asm__ __volatile__("syscall" : "=a" (ret) : "a" (n), "D" (x), "S" (y), "d" (z), "r" (r10), "r" (r8), "r" (r9) : "rcx", "r11", "memory");
	return ret;
}

enum {
	SYS(READ)
	SYS(WRITE)
	SYS(OPEN)
	SYS(CLOSE)
	SYS(STAT)
	SYS(FSTAT)
	SYS(LSTAT)
	SYS(POLL)
	SYS(LSEEK)
	SYS(MMAP)
	SYS(MPROTECT)
	SYS(MUNMAP)
	SYS(BRK)
	SYS(RT_SIGACTION)
	SYS(RT_SIGPROCMASK)
	SYS(RT_SIGRETURN)
	SYS(IOCTL)
	SYS(PREAD64)
	SYS(PWRITE64)
	SYS(READV)
	SYS(WRITEV)
	SYS(ACCESS)
	SYS(PIPE)
	SYS(SELECT)
	SYS(SCHED_YIELD)
	SYS(MREMAP)
	SYS(MSYNC)
	SYS(MINCORE)
	SYS(MADVISE)
	SYS(SHMGET)
	SYS(SHMAT)
	SYS(SHMCTL)
	SYS(DUP)
	SYS(DUP2)
	SYS(PAUSE)
	SYS(NANOSLEEP)
	SYS(GETITIMER)
	SYS(ALARM)
	SYS(SETITIMER)
	SYS(GETPID)
	SYS(SENDFILE)
	SYS(SOCKET)
	SYS(CONNECT)
	SYS(ACCEPT)
	SYS(SENDTO)
	SYS(RECVFROM)
	SYS(SENDMSG)
	SYS(RECVMSG)
	SYS(SHUTDOWN)
	SYS(BIND)
	SYS(LISTEN)
	SYS(GETSOCKNAME)
	SYS(GETPEERNAME)
	SYS(SOCKETPAIR)
	SYS(SETSOCKOPT)
	SYS(GETSOCKOPT)
	SYS(CLONE)
	SYS(FORK)
	SYS(VFORK)
	SYS(EXECVE)
	SYS(EXIT)
	SYS(WAIT4)
	SYS(KILL)
	SYS(UNAME)
	SYS(SEMGET)
	SYS(SEMOP)
	SYS(SEMCTL)
	SYS(SHMDT)
	SYS(MSGGET)
	SYS(MSGSND)
	SYS(MSGRCV)
	SYS(MSGCTL)
	SYS(FCNTL)
	SYS(FLOCK)
	SYS(FSYNC)
	SYS(FDATASYNC)
	SYS(TRUNCATE)
	SYS(FTRUNCATE)
	SYS(GETDENTS)
	SYS(GETCWD)
	SYS(CHDIR)
	SYS(FCHDIR)
	SYS(RENAME)
	SYS(MKDIR)
	SYS(RMDIR)
	SYS(CREAT)
	SYS(LINK)
	SYS(UNLINK)
	SYS(SYMLINK)
	SYS(READLINK)
	SYS(CHMOD)
	SYS(FCHMOD)
	SYS(CHOWN)
	SYS(FCHOWN)
	SYS(LCHOWN)
	SYS(UMASK)
	SYS(GETTIMEOFDAY)
	SYS(GETRLIMIT)
	SYS(GETRUSAGE)
	SYS(SYSINFO)
	SYS(TIMES)
	SYS(PTRACE)
	SYS(GETUID)
	SYS(SYSLOG)
	SYS(GETGID)
	SYS(SETUID)
	SYS(SETGID)
	SYS(GETEUID)
	SYS(GETEGID)
	SYS(SETPGID)
	SYS(GETPPID)
	SYS(GETPGRP)
	SYS(SETSID)
	SYS(SETREUID)
	SYS(SETREGID)
	SYS(GETGROUPS)
	SYS(SETGROUPS)
	SYS(SETRESUID)
	SYS(GETRESUID)
	SYS(SETRESGID)
	SYS(GETRESGID)
	SYS(GETPGID)
	SYS(SETFSUID)
	SYS(SETFSGID)
	SYS(GETSID)
	SYS(CAPGET)
	SYS(CAPSET)
	SYS(RT_SIGPENDING)
	SYS(RT_SIGTIMEDWAIT)
	SYS(RT_SIGQUEUEINFO)
	SYS(RT_SIGSUSPEND)
	SYS(SIGALTSTACK)
	SYS(UTIME)
	SYS(MKNOD)
	SYS(UNUSED0)
	SYS(PERSONALITY)
	SYS(USTAT)
	SYS(STATFS)
	SYS(FSTATFS)
	SYS(SYSFS)
	SYS(GETPRIORITY)
	SYS(SETPRIORITY)
	SYS(SCHED_SETPARAM)
	SYS(SCHED_GETPARAM)
	SYS(SCHED_SETSCHEDULER)
	SYS(SCHED_GETSCHEDULER)
	SYS(SCHED_GET_PRIORITY_MAX)
	SYS(SCHED_GET_PRIORITY_MIN)
	SYS(SCHED_RR_GET_INTERVAL)
	SYS(MLOCK)
	SYS(MUNLOCK)
	SYS(MLOCKALL)
	SYS(MUNLOCKALL)
	SYS(VHANGUP)
	SYS(MODIFY_LDT)
	SYS(PIVOT_ROOT)
	SYS(SYSCTL)
	SYS(PRCTL)
	SYS(ARCH_PRCTL)
	SYS(ADJTIMEX)
	SYS(SETRLIMIT)
	SYS(CHROOT)
	SYS(SYNC)
	SYS(ACCT)
	SYS(SETTIMEOFDAY)
	SYS(MOUNT)
	SYS(UMOUNT2)
	SYS(SWAPON)
	SYS(SWAPOFF)
	SYS(REBOOT)
	SYS(SETHOSTNAME)
	SYS(SETDOMAINNAME)
	SYS(IOPL)
	SYS(IOPERM)
	SYS(UNUSED1)
	SYS(INIT_MODULE)
	SYS(DELETE_MODULE)
	SYS(UNUSED2)
	SYS(UNUSED3)
	SYS(QUOTACTL)
	SYS(UNUSED4)
	SYS(UNUSED5)
	SYS(UNUSED6)
	SYS(UNUSED7)
	SYS(UNUSED8)
	SYS(UNUSED9)
	SYS(GETTID)
	SYS(READAHEAD)
	SYS(SETXATTR)
	SYS(LSETXATTR)
	SYS(FSETXATTR)
	SYS(GETXATTR)
	SYS(LGETXATTR)
	SYS(FGETXATTR)
	SYS(LISTXATTR)
	SYS(LLISTXATTR)
	SYS(FLISTXATTR)
	SYS(REMOVEXATTR)
	SYS(LREMOVEXATTR)
	SYS(FREMOVEXATTR)
	SYS(TKILL)
	SYS(TIME)
	SYS(FUTEX)
	SYS(SCHED_SETAFFINITY)
	SYS(SCHED_GETAFFINITY)
	SYS(UNUSED10)
	SYS(IO_SETUP)
	SYS(IO_DESTROY)
	SYS(IO_GETEVENTS)
	SYS(IO_SUBMIT)
	SYS(IO_CANCEL)
	SYS(UNUSED11)
	SYS(UNUSED12)
	SYS(EPOLL_CREATE)
	SYS(UNUSED13)
	SYS(UNUSED14)
	SYS(REMAP_FILE_PAGES)
	SYS(GETDENTS64)
	SYS(SET_TID_ADDRESS)
	SYS(RESTART_SYSCALL)
	SYS(SEMTIMEDOP)
	SYS(FADVISE64)
	SYS(TIMER_CREATE)
	SYS(TIMER_SETTIME)
	SYS(TIMER_GETTIME)
	SYS(TIMER_GETOVERRUN)
	SYS(TIMER_DELETE)
	SYS(CLOCK_SETTIME)
	SYS(CLOCK_GETTIME)
	SYS(CLOCK_GETRES)
	SYS(CLOCK_NANOSLEEP)
	SYS(EXIT_GROUP)
	SYS(EPOLL_WAIT)
	SYS(EPOLL_CTL)
	SYS(TGKILL)
	SYS(UTIMES)
	SYS(UNUSED15)
	SYS(MBIND)
	SYS(SET_MEMPOLICY)
	SYS(GET_MEMPOLICY)
	SYS(MQ_OPEN)
	SYS(MQ_UNLINK)
	SYS(MQ_TIMEDSEND)
	SYS(MQ_TIMEDRECEIVE)
	SYS(MQ_NOTIFY)
	SYS(MQ_GETSETATTR)
	SYS(KEXEC_LOAD)
	SYS(WAITID)
	SYS(ADD_KEY)
	SYS(REQUEST_KEY)
	SYS(KEYCTL)
	SYS(IOPRIO_SET)
	SYS(IOPRIO_GET)
	SYS(INOTIFY_INIT)
	SYS(INOTIFY_ADD_WATCH)
	SYS(INOTIFY_RM_WATCH)
	SYS(MIGRATE_PAGES)
	SYS(OPENAT)
	SYS(MKDIRAT)
	SYS(MKNODAT)
	SYS(FCHOWNAT)
	SYS(FUTIMESAT)
	SYS(NEWFSTATAT)
	SYS(UNLINKAT)
	SYS(RENAMEAT)
	SYS(LINKAT)
	SYS(SYMLINKAT)
	SYS(READLINKAT)
	SYS(FCHMODAT)
	SYS(FACCESSAT)
	SYS(PSELECT6)
	SYS(PPOLL)
	SYS(UNSHARE)
	SYS(SET_ROBUST_LIST)
	SYS(GET_ROBUST_LIST)
	SYS(SPLICE)
	SYS(TEE)
	SYS(SYNC_FILE_RANGE)
	SYS(VMSPLICE)
	SYS(MOVE_PAGES)
	SYS(UTIMENSAT)
	SYS(EPOLL_PWAIT)
	SYS(SIGNALFD)
	SYS(TIMERFD_CREATE)
	SYS(EVENTFD)
	SYS(FALLOCATE)
	SYS(TIMERFD_SETTIME)
	SYS(TIMERFD_GETTIME)
	SYS(ACCEPT4)
	SYS(SIGNALFD4)
	SYS(EVENTFD2)
	SYS(EPOLL_CREATE1)
	SYS(DUP3)
	SYS(PIPE2)
	SYS(INOTIFY_INIT1)
	SYS(PREADV)
	SYS(PWRITEV)
	SYS(RT_TGSIGQUEUEINFO)
	SYS(PERF_EVENT_OPEN)
	SYS(RECVMMSG)
	SYS(FANOTIFY_INIT)
	SYS(FANOTIFY_MARK)
	SYS(PRLIMIT64)
	SYS(NAME_TO_HANDLE_AT)
	SYS(OPEN_BY_HANDLE_AT)
	SYS(CLOCK_ADJTIME)
	SYS(SYNCFS)
	SYS(SENDMMSG)
	SYS(SETNS)
	SYS(GETCPU)
	SYS(PROCESS_VM_READV)
	SYS(PROCESS_VM_WRITEV)
	SYS(KCMP)
	SYS(FINIT_MODULE)
	SYS(SCHED_SETATTR)
	SYS(SCHED_GETATTR)
	SYS(RENAMEAT2)
	SYS(SECCOMP)
	SYS(GETRANDOM)
	SYS(MEMFD_CREATE)
	SYS(KEXEC_FILE_LOAD)
	SYS(BPF)
	SYS(EXECVEAT)
	SYS(USERFAULTFD)
	SYS(MEMBARRIER)
	SYS(MLOCK2)
	SYS(COPY_FILE_RANGE)
	SYS(PREADV2)
	SYS(PWRITEV2)
	SYS(PKEY_MPROTECT)
	SYS(PKEY_ALLOC)
	SYS(PKEY_FREE)
	SYS(STATX)
	SYS(IO_PGETEVENTS)
	SYS(RSEQ)
	SYS(UNUSED16)
	SYS(UNUSED17)
	SYS(UNUSED18)
	SYS(UNUSED19)
	SYS(UNUSED20)
	SYS(UNUSED21)
	SYS(UNUSED22)
	SYS(UNUSED23)
	SYS(UNUSED24)
	SYS(UNUSED25)
	SYS(UNUSED26)
	SYS(UNUSED27)
	SYS(UNUSED28)
	SYS(UNUSED29)
	SYS(UNUSED30)
	SYS(UNUSED31)
	SYS(UNUSED32)
	SYS(UNUSED33)
	SYS(UNUSED34)
	SYS(UNUSED35)
	SYS(UNUSED36)
	SYS(UNUSED37)
	SYS(UNUSED38)
	SYS(UNUSED39)
	SYS(UNUSED40)
	SYS(UNUSED41)
	SYS(UNUSED42)
	SYS(UNUSED43)
	SYS(UNUSED44)
	SYS(UNUSED45)
	SYS(UNUSED46)
	SYS(UNUSED47)
	SYS(UNUSED48)
	SYS(UNUSED49)
	SYS(UNUSED50)
	SYS(UNUSED51)
	SYS(UNUSED52)
	SYS(UNUSED53)
	SYS(UNUSED54)
	SYS(UNUSED55)
	SYS(UNUSED56)
	SYS(UNUSED57)
	SYS(UNUSED58)
	SYS(UNUSED59)
	SYS(UNUSED60)
	SYS(UNUSED61)
	SYS(UNUSED62)
	SYS(UNUSED63)
	SYS(UNUSED64)
	SYS(UNUSED65)
	SYS(UNUSED66)
	SYS(UNUSED67)
	SYS(UNUSED68)
	SYS(UNUSED69)
	SYS(UNUSED70)
	SYS(UNUSED71)
	SYS(UNUSED72)
	SYS(UNUSED73)
	SYS(UNUSED74)
	SYS(UNUSED75)
	SYS(UNUSED76)
	SYS(UNUSED77)
	SYS(UNUSED78)
	SYS(UNUSED79)
	SYS(UNUSED80)
	SYS(UNUSED81)
	SYS(UNUSED82)
	SYS(UNUSED83)
	SYS(UNUSED84)
	SYS(UNUSED85)
	SYS(UNUSED86)
	SYS(UNUSED87)
	SYS(UNUSED88)
	SYS(UNUSED89)
	SYS(UNUSED90)
	SYS(UNUSED91)
	SYS(UNUSED92)
	SYS(UNUSED93)
	SYS(UNUSED94)
	SYS(UNUSED95)
	SYS(UNUSED96)
	SYS(UNUSED97)
	SYS(UNUSED98)
	SYS(UNUSED99)
	SYS(UNUSED100)
	SYS(UNUSED101)
	SYS(UNUSED102)
	SYS(UNUSED103)
	SYS(UNUSED104)
	SYS(PIDFD_SEND_SIGNAL)
	SYS(IO_URING_SETUP)
	SYS(IO_URING_ENTER)
	SYS(IO_URING_REGISTER)
	SYS(OPEN_TREE)
	SYS(MOVE_MOUNT)
	SYS(FSOPEN)
	SYS(FSCONFIG)
	SYS(FSMOUNT)
	SYS(FSPICK)
	SYS(PIDFD_OPEN)
	SYS(CLONE3)
	SYS(CLOSE_RANGE)
	SYS(OPENAT2)
	SYS(PIDFD_GETFD)
	SYS(FACCESSAT2)
	SYS(PROCESS_MADVISE)
	SYS(EPOLL_PWAIT2)
	SYS(MOUNT_SETATTR)
	SYS(QUOTACTL_FD)
	SYS(LANDLOCK_CREATE_RULESET)
	SYS(LANDLOCK_ADD_RULE)
	SYS(LANDLOCK_RESTRICT_SELF)
	SYS(MEMFD_SECRET)
	SYS(PROCESS_MRELEASE)
	SYS(FUTEX_WAITV)
	SYS(SET_MEMPOLICY_HOME_NODE)
	SYS(CACHESTAT)
	SYS(FCHMODAT2)
	SYS(MAP_SHADOW_STACK)
	SYS(FUTEX_WAKE)
	SYS(FUTEX_WAIT)
	SYS(FUTEX_REQUEUE)
};